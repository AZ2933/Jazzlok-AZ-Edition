@name Jazzlok EMD Flexicoil C Bogie (By AZ)
@inputs Locomotive:entity Locobogey3:entity RLCPT:entity
@outputs BogieSpeed 
@persist Roll Rolling Angle Angle2 Total Sound Speed
@trigger none
#                        & 1
#--------------------FOR-PT2-ONLY--------------------

#Started At: 10:34      -   3:34  -  # 8:39 - 11:09
#Time: PM UTC-3 7/26/21 - 7/27/21 AM #     PM     #

#------------------------------------------------------------

#Lables1#

E = Locomotive
B = Locobogey3
Bogie = B
#------------------------------------------------------------
B:setBodygroup(1,3)
B:setSubMaterial(1,"models/proppertextures/wheel")
B:setSubMaterial(3,"models/proppertextures/enamel_black")
#------------------------------------------------------------
FirstDupeCode = first() | dupefinished()
ClkName1 = "spawn"
TimeSeconds = 100
#------------------------------------------------------------
CommandName1 = "/fixit"
PrintName1 = "Jazzlok: Flexicoil Reset"

#------------------------------------------------------------

#########

#------------------------------------------------------------

#Lables2#

BogeyBaseSubMat = "models/proppertextures/enamel_black"
WheelsSubMat = "Models/effects/vol_light001"

#########

#------------------------------------------------------------

#Lables3#

BaseModel = "models/jazzie/trains/locomotives/emd/emd_flexicoil_c_1.mdl"
WheelsModel = "models/jazzie/trains/locomotives/emd/wheelset_40.mdl"

#########

#------------------------------------------------------------

#Lables4#
#[
    # Brake
    Brake_Release = "_jazzlok/brakes/air_brake_release_1.wav"
    Brake_Release2 = "_jazzlok/brakes/air_brake_hiss_1.wav"
   
    Brake_Apply =  "_jazzlok/brakes/air_brake_release_full.wav"
    Brake_Apply2 = "_jazzlok/brakes/air_brake_apply.wav"    
    
    Brake_Layer1 = "_jazzlok/brakes/brake_whine_heavy.wav"
    Brake_Layer2 = "_jazzlok/brakes/brake_whine_mid.wav"
    Brake_Layer3 = "_jazzlok/brakes/brake_whine_light.wav"
]#

    # Rolling
    Rolling_Layer1 = "_jazzlok/traction/wheel_rolling_02_loop.wav"
    Rolling_Layer2 = "gsgtrainsounds/misc/train_wheels_welded_loop.wav"
    Rolling_Layer3 = "gsgtrainsounds/wheels/emd_dr77_traction.wav" 

#########

#------------------------------------------------------------

#Lables5#

BaseLength   = 0.86    
WheelLength1_3 = -72.5 # 1_3 = 1 & 3 so techically there both together but one of them is "reversed"
WheelLength2 = 0       #No need to touch this

#########

#------------------------------------------------------------

#Lables6#

#

RLCPTW = RLCPT:wirelink()

#

MPH       =    RLCPTW["MPH",number]
Emergency = RLCPTW["Emergency",number]

#

BogieSpeed = MPH # |Speed # & Speed

#

#########

#------------------------------------------------------------

#Holos#

#------------------------------------------------------------

#Base#

if(FirstDupeCode){

A = 0
holoCreate(A)
holoParent(A,B)
holoModel(A,BaseModel)
holoPos(A,B:toWorld(vec(0,0,-46.38)))   
holoAng(A,B:toWorld(ang(0,0,0))) 
holoScale(A,vec(1 , BaseLength , 0.925))
holoEntity(A):setSubMaterial(5,BogeyBaseSubMat)
holoEntity(A):setSubMaterial(6,WheelsSubMat)
holoEntity(A):setSubMaterial(7,WheelsSubMat)
holoEntity(A):setSubMaterial(8,WheelsSubMat)

}

######

if(FirstDupeCode)
{
    timer(ClkName1,TimeSeconds)
}

if(clk(ClkName1))
{

#Wheels#

A = 1
holoCreate(A)
holoParent(A,B)
holoModel(A,WheelsModel)
holoPos(A,B:toWorld(vec(0,+WheelLength1_3,-24.4)))   
holoAng(A,B:toWorld(ang(0,0,0))) 
holoScale(A,vec(1 , 1 , 1))



A = 2
holoCreate(A)
holoParent(A,B)
holoModel(A,WheelsModel)
holoPos(A,B:toWorld(vec(0,WheelLength2,-24.4)))   
holoAng(A,B:toWorld(ang(0,0,0))) 
holoScale(A,vec(1 , 1 , 1))


A = 3
holoCreate(A)
holoParent(A,B)
holoModel(A,WheelsModel)
holoPos(A,B:toWorld(vec(0,-WheelLength1_3,-24.4)))   
holoAng(A,B:toWorld(ang(0,0,0))) 
holoScale(A,vec(1 , 1 , 1))

}

########

#######

#------------------------------------------------------------

#Wheel-Coding#


#     \/ Entity       \/ Wheel Speed?
VelL = B:velL():y()/-4.25 #Wheel direction |" y() "|

Roll += VelL

holoAng(1,B:toWorld(ang(0,0,Roll))) 
holoAng(2,B:toWorld(ang(0,0,Roll))) 
holoAng(3,B:toWorld(ang(0,0,Roll))) 

#############

#------------------------------------------------------------

#Other Coding#


Speed = B:velL():length()

#Speed = MPH #I think using this may be a bit better.

Angle2 = Locomotive:angles():yaw()   

Angle = Bogie:angles():yaw()   

Total = round(Angle - Angle2)

##############

#------------------------------------------------------------

#Sound-Coding#



if((Total < -2 & Total > -358) | Total > 2)
{
    Sound = 1
}
elseif(Total == 0 | Total < 1 | Total > -1 | Total < -359)
{
    Sound = 0
}

soundVolume("noise",(Speed / 600) * 0.5)


if(changed(Sound) & Sound)
{
    
    B:soundPlay("noise",0,"_jazzlok/brakes/flange_loop.wav")
    
}

if(!Sound)
{
    soundVolume("noise",0)
    soundStop("noise")
    }

if(changed(Sound) & !Sound)
{
    B:soundPlay("noise2",0,"_jazzlok/brakes/flange_stop.wav")
    soundStop("noise2",1.5)
    }
soundVolume("noise2",(Speed / 600) * 0.5)    
        
soundPitch("noise",100 + (Speed / 200))
soundPitch("noise2",100 + (Speed / 200))

#========================================================================================================================= 

if(changed(Rolling) & Rolling)
{    
    Bogie:soundPlay("Rolling_Layer1",0,Rolling_Layer1)
    Bogie:soundPlay("Rolling_Layer2",0,Rolling_Layer2)
    Bogie:soundPlay("Rolling_Layer3",0,Rolling_Layer3)
}

if(Emergency)
{
    Dump = 1
}
else
{
    Dump = 0
}

if(changed(Dump) & Dump)
{    
    Bogie:soundPlay("dump",0,"gsgtrainsounds/misc/airbrakes/air_dump.wav")
    Bogie:soundPlay("dump2",0,"gsgtrainsounds/misc/airbrakes/air_train_apply.wav")
    soundPitch("dump",70) 
    soundPitch("dump2",110) 
    
    soundStop("dump",1.75)   
    soundStop("dump2",3)     
}
elseif(!Dump)
{
    soundStop("dump",0.5)
    soundStop("dump2",0.5)
}



soundVolume("Rolling_Layer1",(Speed / 50))
soundVolume("Rolling_Layer2",(Speed / 600))
soundVolume("Rolling_Layer3",(Speed / 600))
    
soundPitch("Rolling_Layer1",30 + Speed / 100)
soundPitch("Rolling_Layer2",60 + Speed / 200)
soundPitch("Rolling_Layer3",10 + Speed / 10)

if(Speed > 10)
{
    Rolling = 1
}
else
{
    Rolling = 0
    soundStop("Rolling_Layer1")
    soundStop("Rolling_Layer2")
    soundStop("Rolling_Layer3")
}

#

##############

#------------------------------------------------------------

#Command-Codes#

RadioCmd = owner():lastSaid():explode(" ")

runOnChat(1)
if(chatClk(owner()))
{
    if(RadioCmd[1,string]==CommandName1)
    {
        hideChat(1)
        print(PrintName1) 
        reset()
        
    }
}



###############

interval(100)
B:setAlpha(0)
